_target_: cross_view_transformer.model.cvt.CrossViewTransformer

dim_last: 64

outputs:
  bev: [0, 1]

encoder:
  _target_: cross_view_transformer.model.encoder_axial.Encoder

  dim: [128, 128, 128]
  scale: 1.0
  middle: [2, 2, 2]

  backbone:
    _target_: cross_view_transformer.model.backbones.efficientnet.EfficientNetExtractor

    model_name: efficientnet-b4
    layer_names: ['reduction_2', 'reduction_3', 'reduction_4']
    image_height: ${data.image.h}
    image_width: ${data.image.w}

  cross_view:
    heads: [4, 4, 4]
    dim_head: [32, 32, 32]
    qkv_bias: True
    skip: True
    no_image_features: False

    image_height: ${data.image.h}
    image_width: ${data.image.w}

  cross_view_swap:
    rel_pos_emb: False
    q_win_size: [[10, 10], [10, 10], [25, 25]]
    feat_win_size: [[12, 24], [6, 12], [7, 15]]
    bev_embedding_flag: [true, false, false]

  bev_embedding:
    sigma: 1.0

    bev_height: ${data.bev.h}
    bev_width: ${data.bev.w}
    h_meters: ${data.bev.h_meters}
    w_meters: ${data.bev.w_meters}
    offset: ${data.bev.offset}

    decoder_blocks: ${model.decoder.blocks}

decoder:
  _target_: cross_view_transformer.model.decoder.Decoder

  dim: 128
  blocks: [128, 64]
  residual: True
  factor: 2